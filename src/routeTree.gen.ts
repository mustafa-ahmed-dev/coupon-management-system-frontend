/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users/index'
import { Route as CouponsIndexImport } from './routes/coupons/index'
import { Route as UsersIdImport } from './routes/users/$id'
import { Route as CouponsUsedImport } from './routes/coupons/used'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const CouponsIndexRoute = CouponsIndexImport.update({
  id: '/coupons/',
  path: '/coupons/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIdRoute = UsersIdImport.update({
  id: '/users/$id',
  path: '/users/$id',
  getParentRoute: () => rootRoute,
} as any)

const CouponsUsedRoute = CouponsUsedImport.update({
  id: '/coupons/used',
  path: '/coupons/used',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/coupons/used': {
      id: '/coupons/used'
      path: '/coupons/used'
      fullPath: '/coupons/used'
      preLoaderRoute: typeof CouponsUsedImport
      parentRoute: typeof rootRoute
    }
    '/users/$id': {
      id: '/users/$id'
      path: '/users/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof UsersIdImport
      parentRoute: typeof rootRoute
    }
    '/coupons/': {
      id: '/coupons/'
      path: '/coupons'
      fullPath: '/coupons'
      preLoaderRoute: typeof CouponsIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRoute
  '/login': typeof LoginRoute
  '/coupons/used': typeof CouponsUsedRoute
  '/users/$id': typeof UsersIdRoute
  '/coupons': typeof CouponsIndexRoute
  '/users': typeof UsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRoute
  '/login': typeof LoginRoute
  '/coupons/used': typeof CouponsUsedRoute
  '/users/$id': typeof UsersIdRoute
  '/coupons': typeof CouponsIndexRoute
  '/users': typeof UsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRoute
  '/login': typeof LoginRoute
  '/coupons/used': typeof CouponsUsedRoute
  '/users/$id': typeof UsersIdRoute
  '/coupons/': typeof CouponsIndexRoute
  '/users/': typeof UsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/coupons/used'
    | '/users/$id'
    | '/coupons'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/coupons/used'
    | '/users/$id'
    | '/coupons'
    | '/users'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/login'
    | '/coupons/used'
    | '/users/$id'
    | '/coupons/'
    | '/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRoute
  LoginRoute: typeof LoginRoute
  CouponsUsedRoute: typeof CouponsUsedRoute
  UsersIdRoute: typeof UsersIdRoute
  CouponsIndexRoute: typeof CouponsIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRoute,
  LoginRoute: LoginRoute,
  CouponsUsedRoute: CouponsUsedRoute,
  UsersIdRoute: UsersIdRoute,
  CouponsIndexRoute: CouponsIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/login",
        "/coupons/used",
        "/users/$id",
        "/coupons/",
        "/users/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/coupons/used": {
      "filePath": "coupons/used.tsx"
    },
    "/users/$id": {
      "filePath": "users/$id.tsx"
    },
    "/coupons/": {
      "filePath": "coupons/index.tsx"
    },
    "/users/": {
      "filePath": "users/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
